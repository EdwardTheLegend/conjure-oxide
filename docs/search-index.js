var searchIndex = new Map(JSON.parse('[\
["chuffed_rs",{"t":"CCFHHHFFFHISSSSFFFHFHHHIIHHFSSHFHHHHHHHHHHHFISSSSSFFFUFFFISSSSSSSSFISSSSSSSSSSSSSSSSISSSSSFFOOOOOOOOOOOHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHONNOONNNHNONNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNHNOOONHNNNNNNNNNNNNNNNNNNNNNNONHOOOONNNNNHHHHOHHHNNOOOOOOOOOONNNNNNNNNOOONHNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOHFOONOHHHHHHH","n":["bindings","wrappers","BoolView","BoolView_attach","BoolView_detach","BoolView_getScore","Branching","Branching__bindgen_vtable","Clause","Clause_debug","ConLevel","ConLevel_CL_BND","ConLevel_CL_DEF","ConLevel_CL_DOM","ConLevel_CL_VAL","DecInfo","DummyProblem","IntVar","IntVar_IntVar","IntVar_PropInfo","IntVar_allowSet","IntVar_attach","IntVar_branch","IntVar_const_iterator","IntVar_const_reverse_iterator","IntVar_getScore","IntVar_initVals","IntVar_iterator","IntVar_max_limit","IntVar_min_limit","IntVar_remVal","IntVar_reverse_iterator","IntVar_setMax","IntVar_setMin","IntVar_setVal","IntVar_simplifyWatches","IntVar_specialiseToEL","IntVar_specialiseToLL","IntVar_specialiseToSL","IntVar_updateFixed","IntVar_updateMax","IntVar_updateMin","IntVar_wakePropagators","Lit","PreferredVal","PreferredVal_PV_MAX","PreferredVal_PV_MEDIAN","PreferredVal_PV_MIN","PreferredVal_PV_SPLIT_MAX","PreferredVal_PV_SPLIT_MIN","Propagator","Propagator__bindgen_vtable","Reason","Reason__bindgen_ty_1","Reason__bindgen_ty_1__bindgen_ty_1","Tchar","Tint","ValBranch","ValBranch_VAL_DEFAULT","ValBranch_VAL_MAX","ValBranch_VAL_MEDIAN","ValBranch_VAL_MIDDLE","ValBranch_VAL_MIN","ValBranch_VAL_RANDOM","ValBranch_VAL_SPLIT_MAX","ValBranch_VAL_SPLIT_MIN","Var","VarBranch","VarBranch_VAR_ACTIVITY","VarBranch_VAR_DEFAULT","VarBranch_VAR_DEGREE_MAX","VarBranch_VAR_DEGREE_MIN","VarBranch_VAR_INORDER","VarBranch_VAR_MAX_MAX","VarBranch_VAR_MAX_MIN","VarBranch_VAR_MIN_MAX","VarBranch_VAR_MIN_MIN","VarBranch_VAR_PSEUDO_COST","VarBranch_VAR_RANDOM","VarBranch_VAR_REDUCED_COST","VarBranch_VAR_REGRET_MAX_MAX","VarBranch_VAR_REGRET_MIN_MAX","VarBranch_VAR_SIZE_MAX","VarBranch_VAR_SIZE_MIN","VarType","VarType_BOOL_VAR","VarType_INT_VAR","VarType_INT_VAR_EL","VarType_INT_VAR_LL","VarType_INT_VAR_SL","__BindgenBitfieldUnit","__IncompleteArrayField","__bindgen_anon_1","_base","_base","_base","_bitfield_1","_bitfield_1","_bitfield_align_1","_bitfield_align_1","_phantom_0","a","activity","all_different","all_in_scip","as_mut_ptr","as_mut_slice","as_ptr","as_slice","attach","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch","branch_IntVar","callback","cap","changes","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","createVar","createVars","createVars1","createVars2","createVars3","d","d1","d2","data","data","debug","default","default","destroy_vec_intvar","detach","eflags","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward","forward","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get_bit","get_idx","hash","in_queue","in_queue","in_scip","initVals","int_plus","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","last_solution_value","learnt","make_vec_intvar","max","max0","min","min0","new","new","new","new_bitfield_1","new_bitfield_1","new_dummy_problem","new_xyz_problem","output_vars","output_vars1","p","p_addVars","p_print","p_setcallback","padding","partial_cmp","pinfo","pos","preferred_val","priority","prop_id","pt","s","satisfied","sbps_value_selection","searchVars","set","set_bit","set_d1","set_d2","set_learnt","set_padding","set_sz","set_temp_expl","set_type","shadow_val","should_be_decidable","should_be_learnable","simplifyWatches","solve_xyz","specialiseToEL","specialiseToLL","specialiseToSL","sz","sz","temp_expl","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","updateFixed","updateMax","updateMin","v","v","v","val","val","val","vals","var","var","var","var_id","var_sym_break","vec","vtable_","vtable_","wakePropagators","x","all_different_wrapper","branch_wrapper","create_var","create_vars","int_plus_wrapper","output_vars_wrapper","var_sym_break_wrapper"],"q":[[0,"chuffed_rs"],[2,"chuffed_rs::bindings"],[429,"chuffed_rs::wrappers"],[436,"std::os::raw"],[437,"core::clone"],[438,"core::cmp"],[439,"core::cmp"],[440,"core::cmp"],[441,"core::fmt"],[442,"core::convert"],[443,"core::hash"],[444,"core::cmp"],[445,"core::any"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,33,4,34,25,17,25,17,32,16,34,0,34,1,1,1,1,4,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,0,0,21,32,34,8,10,11,12,13,14,15,16,17,18,19,20,21,8,10,11,12,13,14,15,16,17,18,19,20,21,8,0,0,0,0,0,16,17,17,32,25,25,8,1,0,4,18,8,8,1,32,10,11,12,13,14,25,17,5,33,4,34,18,19,20,21,52,20,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,8,8,0,8,5,34,34,34,0,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,34,25,0,34,34,34,34,8,1,34,25,17,0,0,0,0,18,0,0,0,25,8,34,18,34,5,5,16,4,5,34,21,8,8,17,17,25,25,25,25,17,34,34,34,34,0,34,34,34,25,32,25,8,10,11,12,13,14,15,16,17,18,19,20,21,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,17,12,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,34,34,34,10,11,4,53,12,19,34,53,12,19,34,0,0,13,5,34,14,0,0,0,0,0,0,0],"f":"`````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}}{}{}}{{{b{c}}d}{{f{c}}}{}}10{{hjll}n}{ce{}{}}0000000000000000000000000000000000000000000`````{{{A`{c}}}{{A`{c}}}Ab}{AdAd}{AfAf}{AhAh}{AjAj}{AlAl}{AnAn}{B`B`}{BbBb}{BdBd}{BfBf}{BhBh}{BjBj}{{ce}n{}{}}000000000000{{{A`{c}}{A`{c}}}BlBn}``````{BbC`}0``{Cbn}{{}{{A`{c}}}Cd}{{}{{b{c}}}Cd}`{{hjll}n}`{{{A`{c}}{A`{c}}}CfCh}{{{A`{c}}Cj}ClCn}{{{b{c}}Cj}Cl{}}{{{D`{c}}Cj}ClCn}{{AdCj}Cl}{{AfCj}Cl}{{AhCj}Cl}{{AjCj}Cl}{{AlCj}Cl}{{CbCj}Cl}{{BbCj}Cl}{{jCj}Cl}{{DbCj}Cl}{{hCj}Cl}{{DdCj}Cl}{{BdCj}Cl}{{BfCj}Cl}{{BhCj}Cl}{{BjCj}Cl}``{cc{}}000000000000000000000{{{A`{c}}dDf}Dh{{Dj{{f{Df}}}}{Dl{{f{Df}}}}}}{{{A`{c}}d}Cf{{Dj{{f{Df}}}}{Dl{{f{Df}}}}}}`{{{A`{c}}e}nDnE`}```{{DdCf}n}`{ce{}{}}000000000000000000000`{CbC`}`````{c{{A`{c}}}{}}{{}{{b{c}}}{}}{{ll}Dd}{{C`C`C`C`}{{A`{{Eb{Df}}}}}}{{C`C`C`}{{A`{{Eb{Df}}}}}}````````5{{{A`{c}}{A`{c}}}{{Ed{Bl}}}Ef}``````````{{{A`{c}}dDfDh}n{{Dj{{f{Df}}}}{Dl{{f{Df}}}}}}{{{A`{c}}dCf}n{{Dj{{f{Df}}}}{Dl{{f{Df}}}}}}{{BbC`}n}0{{CbC`}n}0001```{Ddl}`{Ddn}0{{DdD`}n}=`=>>>>>>>>>>>>>{c{{Eh{e}}}{}{}}0000000000000000000000000000000000000000000{BbC`}`{cEj{}}000000000000000000000444```````````````4`{{D`El}n}{{D`EnF`}n}{{FbFbCf}Dd}{{FbFbFbCf}D`}{{DdDdDd}n}{D`n}0","D":"Eh","p":[[5,"__IncompleteArrayField",2],[1,"usize"],[1,"slice"],[5,"BoolView",2],[5,"Propagator",2],[8,"c_int",436],[1,"unit"],[5,"__BindgenBitfieldUnit",2],[10,"Clone",437],[5,"Tchar",2],[5,"Tint",2],[5,"DecInfo",2],[5,"Branching",2],[5,"Lit",2],[5,"Reason",2],[20,"Reason__bindgen_ty_1",2],[5,"Reason__bindgen_ty_1__bindgen_ty_1",2],[5,"IntVar_PropInfo",2],[5,"IntVar_iterator",2],[5,"IntVar_reverse_iterator",2],[5,"DummyProblem",2],[6,"Ordering",438],[10,"Ord",438],[8,"c_uint",436],[5,"Clause",2],[10,"Default",439],[1,"bool"],[10,"PartialEq",438],[5,"Formatter",440],[8,"Result",440],[10,"Debug",440],[5,"vec",2],[5,"Var",2],[5,"IntVar",2],[1,"u8"],[1,"u64"],[10,"AsRef",441],[10,"AsMut",441],[10,"Hash",442],[10,"Hasher",442],[1,"array"],[6,"Option",443],[10,"PartialOrd",438],[6,"Result",444],[5,"TypeId",445],[8,"ConLevel",2],[8,"VarBranch",2],[8,"ValBranch",2],[1,"i32"],[5,"Branching__bindgen_vtable",2],[5,"Propagator__bindgen_vtable",2],[8,"IntVar_const_reverse_iterator",2],[8,"IntVar_const_iterator",2]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAIgBAwAAAN8A9gAIABUBnwA="}],\
["conjure_core",{"t":"ECDCCCCCCCCCPPPPPPPGPFPGPGPPPPPPPPPPGPPPPGPGPPPPPPIPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNOONNNNNNOONNNOONNNNNPGPPPPPINNNNNNNNNNNNNNFNNNONNNNNNNNNNNNNNNNNNNFNNNNNNNNOONNNNNNNNNNNNNNNNNNNNONHHHGIPPPFPGFPFNNNCONNNNNNNNNNNNNNNNNNXNNNNNNNNNNNNNNNNNHHHHHHNHNNNNNNNOONNNOOONXQHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNXEHPPPPPPPPPPPPPGGGFFKIGGFIPPNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNMNCNNNNNNNNNMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKGFPPNNNNNNNNNNNNNNNNNNFFFFKOONNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNOFFFNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNONNNNOOOOOOOONNNNNNNNNOOONNNNNNNNNNNNNNNN","n":["Model","ast","conjure_core","context","error","metadata","model","parse","rule_engine","rules","solver","stats","AllDiff","And","Bool","Bool","BoolDomain","Bounded","Bubble","Constant","Constant","DecisionVariable","DivEq","Domain","Eq","Expression","Geq","Gt","Ineq","Int","Int","IntDomain","Leq","Lt","MachineName","Min","Name","Neq","Not","Nothing","Or","Range","Reference","ReturnType","SafeDiv","Single","Sum","SumEq","SumGeq","SumLeq","SymbolTable","UnsafeDiv","UserName","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","can_be_undefined","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","domain","eq","eq","eq","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","hash","into","into","into","into","into","into","into","is_all_diff","is_and","is_bubble","is_clean","is_constant","is_div_eq","is_eq","is_geq","is_gt","is_ineq","is_leq","is_lt","is_min","is_neq","is_not","is_nothing","is_or","is_reference","is_safe_div","is_sum","is_sum_eq","is_sum_geq","is_sum_leq","is_unsafe_div","max_i32","min_i32","min_max_i32","new","partial_cmp","return_type","serialize","serialize","serialize","serialize","serialize","serialize","set_clean","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uniplate","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Context","__clone_box","borrow","borrow_mut","clone","clone_into","default","do_erased_serialize","eq","erased_serialize","extra_rule_set_names","file_name","fmt","from","into","json_schema","new","new_ptr","rule_sets","rules","schema_id","schema_name","serialize","stats","target_solver_family","to_owned","try_from","try_into","type_id","vzip","Err","Error","JSON","NotImplemented","Ok","Other","Parse","Result","borrow","borrow_mut","fmt","fmt","from","from","from","into","source","to_string","try_from","try_into","type_id","vzip","Metadata","__clone_box","borrow","borrow_mut","clean","clone","clone_into","default","deserialize","do_erased_serialize","eq","erased_serialize","fmt","fmt","from","into","new","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","Model","__clone_box","add_constraint","add_constraints","add_variable","borrow","borrow_mut","clone","clone_into","constraints","context","deserialize","do_erased_serialize","eq","erased_serialize","fmt","from","gensym","get_constraints_vec","get_domain","into","new","new_empty","serialize","set_constraints","set_context","to_owned","try_from","try_into","type_id","update_domain","variables","vzip","get_example_model","get_example_model_by_path","model_from_json","ApplicationError","ApplicationResult","BoundError","Err","Ok","Reduction","ResolveRulesError","RewriteError","Rule","RuleNotApplicable","RuleSet","__clone_box","__clone_box","__clone_box","_dependencies","application","apply","apply","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","distributed_slice","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_dependencies","get_rule_by_name","get_rule_priorities","get_rule_set_by_name","get_rule_sets","get_rule_sets_for_solver_family","get_rules","get_rules","get_rules_vec","hash","hash","into","into","into","into","into","name","name","new","new","new","new_expression","new_top","order","pure","register_rule","register_rule_set","resolve_rule_sets","rewrite_model","rule_sets","solver_families","symbols","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_dependencies","with_symbols","with_top","distributed_slice","linkme","eval_constant","Complete","HasSolutions","Incomplete","Minion","ModelFeatureNotImplemented","ModelFeatureNotSupported","ModelInvalid","NoSolutions","OpNotImplemented","OpNotSupported","Runtime","RuntimeNotImplemented","SAT","SearchComplete","SearchIncomplete","SearchStatus","SolveSuccess","Solver","SolverAdaptor","SolverCallback","SolverError","SolverFamily","SolverFamilyIter","SolverMutCallback","Timeout","UserTerminated","__clone_box","__clone_box","__clone_box","__clone_box","adaptors","add_adaptor_info_to_stats","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deserialize","do_erased_serialize","eq","erased_serialize","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","get_family","get_family","get_name","hash","init_solver","into","into","into","into","into","into","into","into","into_iter","iter","json_schema","len","load_model","load_model","model_modifier","new","next","next_back","nth","save_stats_to_context","schema_id","schema_name","serialize","size_hint","solve","solve","solve_mut","solve_mut","states","stats","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wall_time_s","Kissat","Minion","borrow","borrow","borrow_mut","borrow_mut","default","default","from","from","get_family","get_family","get_name","into","into","load_model","load_model","new","new","solve","solve","solve_mut","solve_mut","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ArgsInvalid","Error","ModelModifier","ModificationFailure","NotModifiable","OpNotImplemented","OpNotSupported","add_constraint","add_variable","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ExecutionFailure","ExecutionSuccess","Init","ModelLoaded","SolverState","_sealed","_sealed","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","into","into","into","into","stats","status","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","why","RewriterStats","SolverStats","Stats","__clone_box","__clone_box","__clone_box","add_rewriter_run","add_solver_run","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","conjure_solver_wall_time_s","default","default","default","do_erased_serialize","do_erased_serialize","do_erased_serialize","erased_serialize","erased_serialize","erased_serialize","from","from","from","into","into","into","is_optimization_enabled","json_schema","json_schema","json_schema","new","nodes","rewriter_rule_application_attempts","rewriter_rule_applications","rewriter_run_time","rewriter_runs","sat_clauses","sat_vars","satisfiable","schema_id","schema_id","schema_id","schema_name","schema_name","schema_name","serialize","serialize","serialize","solver_adaptor","solver_family","solver_runs","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_timings"],"q":[[0,"conjure_core"],[12,"conjure_core::ast"],[224,"conjure_core::context"],[254,"conjure_core::error"],[276,"conjure_core::metadata"],[300,"conjure_core::model"],[333,"conjure_core::parse"],[336,"conjure_core::rule_engine"],[449,"conjure_core::rule_engine::_dependencies"],[451,"conjure_core::rules"],[452,"conjure_core::solver"],[601,"conjure_core::solver::adaptors"],[632,"conjure_core::solver::model_modifier"],[657,"conjure_core::solver::states"],[699,"conjure_core::stats"],[776,"dyn_clone::sealed"],[777,"core::option"],[778,"core::clone"],[779,"core::cmp"],[780,"core::result"],[781,"serde::de"],[782,"serde::de"],[783,"erased_serde::ser"],[784,"core::fmt"],[785,"core::fmt"],[786,"serde::ser"],[787,"serde::ser"],[788,"core::any"],[789,"alloc::vec"],[790,"core::ops::function"],[791,"alloc::boxed"],[792,"schemars::gen"],[793,"schemars::schema"],[794,"std::sync::rwlock"],[795,"alloc::sync"],[796,"alloc::borrow"],[797,"serde_json::error"],[798,"anyhow"],[799,"core::error"],[800,"std::collections::hash::set"],[801,"std::collections::hash::map"],[802,"core::fmt"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,3,3,9,14,12,10,3,0,3,0,3,0,3,0,3,3,3,9,14,12,3,3,13,3,0,3,3,3,3,0,3,0,3,10,3,3,3,3,0,3,13,9,10,12,3,13,14,15,9,10,12,3,13,14,15,9,10,12,3,13,14,15,3,3,9,10,12,3,13,14,15,9,10,12,3,13,14,15,13,9,10,12,3,13,15,9,10,12,3,13,15,15,9,10,12,3,13,14,15,9,10,12,3,13,15,9,9,10,12,3,3,13,13,14,15,15,9,9,9,10,12,3,3,3,13,14,15,13,9,10,12,3,13,14,15,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,12,12,12,15,13,3,9,10,12,3,13,15,3,9,10,12,3,13,14,15,9,3,13,15,9,10,12,3,13,14,15,9,10,12,3,13,14,15,9,10,12,3,13,14,15,3,9,10,12,3,13,14,15,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,51,0,45,45,51,45,45,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,0,0,0,0,0,55,53,53,0,54,0,0,55,0,52,39,40,0,39,52,39,54,55,52,39,40,54,55,52,39,40,52,39,40,52,39,40,0,39,40,54,54,55,55,52,39,39,40,40,54,55,52,39,40,40,0,0,0,0,0,0,40,0,39,40,54,55,52,39,40,39,40,52,39,40,52,52,40,52,0,0,0,0,39,40,52,52,39,40,54,55,39,40,54,55,52,39,40,54,55,52,39,40,54,55,52,39,40,54,55,52,39,40,40,52,52,0,0,0,83,84,83,38,67,67,67,84,67,67,67,67,38,0,0,0,0,0,0,0,0,0,0,0,85,85,38,64,65,67,0,62,74,83,85,84,38,64,65,67,74,83,85,84,38,64,65,67,38,64,65,67,38,64,65,67,38,38,38,38,38,38,64,67,67,74,83,85,84,38,64,65,67,38,62,65,62,38,62,74,83,85,84,38,64,65,67,64,38,38,64,62,65,0,65,64,64,64,65,38,38,38,64,62,65,62,65,0,65,38,64,65,67,38,67,74,83,85,84,38,38,64,65,67,74,83,85,84,38,64,65,67,74,83,85,84,38,64,65,67,74,83,85,84,38,64,65,67,65,0,0,77,78,77,78,77,78,77,78,77,78,78,77,78,77,78,77,78,77,78,77,78,77,78,77,78,77,78,77,78,80,80,0,0,0,80,80,79,79,86,80,86,80,86,80,86,80,86,80,86,80,86,80,86,80,0,0,0,0,0,72,87,70,71,72,87,70,71,72,87,70,71,72,87,70,71,72,87,72,72,70,71,72,87,70,71,72,87,70,71,72,87,70,71,72,87,87,0,0,0,82,63,81,81,81,82,63,81,82,63,81,82,63,81,82,63,81,63,82,63,81,82,63,81,82,63,81,82,63,81,82,63,81,82,82,63,81,81,63,82,82,82,81,63,63,63,82,63,81,82,63,81,82,63,81,63,63,81,82,63,81,82,63,81,82,63,81,82,63,81,82,63,81,63],"f":"`````````````````````````````````````````````````````{{cb}d{}}000000{ce{}{}}0000000000000{{fh}{{n{{l{jj}}}}}}{fA`}{AbAb}{{{Ad{c}}}{{Ad{c}}}Af}{AhAh}{ff}{AjAj}{AlAl}{AnAn}{{ce}d{}{}}000000{{AjAj}B`}{c{{Bb{Ab}}}Bd}{c{{Bb{{Ad{e}}}}}BdBf}{c{{Bb{Ah}}}Bd}{c{{Bb{f}}}Bd}{c{{Bb{Aj}}}Bd}{c{{Bb{An}}}Bd}{{cBh}{{Bb{dBj}}}{}}00000`{{AbAb}A`}{{{Ad{c}}{Ad{c}}}A`Bl}{{AhAh}A`}{{ff}A`}{{AjAj}A`}{{AlAl}A`}{{AnAn}A`}{{cBh}{{Bb{dBn}}}{}}00000{{AbC`}Cb}0{{{Ad{c}}C`}CbCd}{{AhC`}Cb}{{fC`}Cb}0{{AjC`}Cb}0{{AlC`}Cb}{{AnC`}Cb}0{A`Ab}{jAb}{cc{}}000{A`f}{jf}222{{Ajc}dCf}{ce{}{}}000000{fA`}00000000000000000000000{Ah{{n{j}}}}0{Ah{{n{{l{jj}}}}}}{AhAn}{{AjAj}{{n{B`}}}}{f{{n{Al}}}}{{Abc}BbCh}{{{Ad{c}}e}BbCjCh}{{Ahc}BbCh}{{fc}BbCh}{{Ajc}BbCh}{{Anc}BbCh}{{fA`}d}======={cCl{}}000{c{{Bb{e}}}{}{}}0000000000000{cCn{}}000000{f{{l{{D`{f}}{Dd{Db}}}}}}{ce{}{}}000000`{{cb}d{}}11{DfDf}{{ce}d{}{}}{{}Df}{{cBh}{{Bb{dBj}}}{}}{{DfDf}A`}{{cBh}{{Bb{dBn}}}{}}``{{DfC`}Cb}{cc{}}9{DhDj}{{Dl{D`{Cl}}{D`{Dn}}{D`{E`}}}Df}{{Dl{D`{Cl}}{D`{Dn}}{D`{E`}}}{{Ed{{Eb{Df}}}}}}``{{}{{Eh{Ef}}}}{{}Cl}{{Dfc}BbCh}``?{c{{Bb{e}}}{}{}}0{cCn{}}{ce{}{}}````````00{{EjC`}Cb}0{ElEj};{EnEj}3{Ej{{n{F`}}}}{cCl{}}7765`{{cb}d{}}66`{FbFb}{{ce}d{}{}}{{}Fb}{c{{Bb{Fb}}}Bd}{{cBh}{{Bb{dBj}}}{}}{{FbFb}A`}{{cBh}{{Bb{dBn}}}{}}{{FbC`}Cb}0{cc{}}?6{{Fbc}BbCh}{ce{}{}}<{c{{Bb{e}}}{}{}}0{cCn{}}2`={{Fdf}d}{{Fd{D`{f}}}d}{{FdAjAn}d}55{FdFd}?``{c{{Bb{Fd}}}Bd}={{FdFd}A`}<{{FdC`}Cb};{FdAj}{Fd{{D`{f}}}}{{FdAj}{{n{Ah}}}}<{{hf{Ed{{Eb{Df}}}}}Fd}{{{Ed{{Eb{Df}}}}}Fd}{{Fdc}BbCh};{{Fd{Ed{{Eb{Df}}}}}d}{ce{}{}}{c{{Bb{e}}}{}{}}0{cCn{}}{{FdAjAh}d}`3{Ef{{Bb{FdEn}}}}0{{Ef{Ed{{Eb{Df}}}}}{{Ff{Fd}}}}```````````{{cb}d{}}00``{{FhFd}d}{{DnfFd}Fj}8888888888{FhFh}{DnDn}{E`E`}{{ce}d{}{}}00`{{DnDn}A`}{{E`E`}A`}{{FlC`}Cb}0{{FnC`}Cb}0{{FhC`}Cb}{{DnC`}Cb}0{{E`C`}Cb}0{cc{}}0000{E`{{G`{E`}}}}{Ef{{n{Dn}}}}{{{D`{E`}}}{{Bb{{Gd{DnGb}}`}}}}{Ef{{n{E`}}}}{{}{{D`{E`}}}}{Dl{{D`{E`}}}}{{}{{D`{Dn}}}}{E`{{Gd{DnGb}}}}{{{Gd{DnGb}}}{{D`{Dn}}}}{{Dnc}dCf}{{E`c}dCf}{ce{}{}}0000``{{ffh}Fh}{{Ef{Gh{fFd}{{Gf{Fj}}}}{Gj{{l{EfGb}}}}}Dn}{{EfGb{Gj{Ef}}{Gj{Dl}}}E`}```{fFh}``{{Dl{D`{Cl}}}{{Bb{{D`{E`}}`}}}}{{Fd{D`{E`}}}{{Bb{FdFl}}}}```666{cCl{}}000{c{{Bb{e}}}{}{}}000000000{cCn{}}000099999{E`{{G`{E`}}}}{{fh}Fh}{{ff}Fh}``{f{{n{Ab}}}}``````````````````````````{{cb}d{}}000`{{GlGn}Gn}????????????????{DlDl}{H`H`}{{{Hb{ce}}}{{Hb{ce}}}{AfGl}{AfHd}}{HfHf}{{ce}d{}{}}000{c{{Bb{Dl}}}Bd}{{cBh}{{Bb{dBj}}}{}}{{DlDl}A`}{{cBh}{{Bb{dBn}}}{}}{{DlC`}Cb}{{DlC`}{{Bb{dHh}}}}{{H`C`}Cb}{{HfC`}Cb}0{cc{}}0000000{Ef{{Bb{Dlc}}}{}}{GlDl}{{{Hb{c}}}DlGl}{Gl{{n{Cl}}}}{{Dlc}dCf}`{ce{}{}}00000000{{}H`}{DhDj}{H`Hj}`{{{Hb{cHl}}Fd}{{Bb{{Hb{cHn}}Hf}}}Gl}`{c{{Hb{c}}}Gl}{H`{{n{c}}}{}}0{{H`Hj}{{n{c}}}{}}{{{Hb{cI`}}}dGl}{{}{{Eh{Ef}}}}{{}Cl}{{Dlc}BbCh}{H`{{l{Hj{n{Hj}}}}}}`{{{Hb{cHn}}Ib}{{Bb{{Hb{cI`}}Hf}}}Gl}`{{{Hb{cHn}}If}{{Bb{{Hb{cI`}}Hf}}}Gl}`{{{Hb{cI`}}}GnGl}????{cCl{}}0{c{{Bb{e}}}{}{}}0000{Ef{{Bb{Dlc}}}{}}11111111111{cCn{}}0000000{ce{}{}}0000000{{{Hb{cI`}}}IhGl}``1111{{}Ij}{{}Il}{cc{}}0{IjDl}{IlDl}{Il{{n{Cl}}}}77``54````::::8877```````{{Inf}{{Bb{dJ`}}}}{{InAjAh}{{Bb{dJ`}}}}99995599<<<<::99```````9999999955559999``<<<<<<<<::::9999````{{cb}d{}}00{{JbJd}d}{{JbGn}d}<<<<<<{JdJd}{GnGn}{JbJb}{{ce}d{}{}}00`{{}Jd}{{}Gn}{{}Jb}{{cBh}{{Bb{dBj}}}{}}00{{cBh}{{Bb{dBn}}}{}}00{cc{}}00{ce{}{}}00`{DhDj}005````````{{}{{Eh{Ef}}}}00{{}Cl}00{{Jdc}BbCh}{{Gnc}BbCh}{{Jbc}BbCh}```666{c{{Bb{e}}}{}{}}00000{cCn{}}00888{{GnIh}Gn}","D":"AGd","p":[[5,"Private",776],[1,"unit"],[6,"Expression",12],[8,"SymbolTable",12],[1,"i32"],[1,"tuple"],[6,"Option",777],[1,"bool"],[6,"Constant",12],[6,"Range",12],[10,"Clone",778],[6,"Domain",12],[6,"Name",12],[6,"ReturnType",12],[5,"DecisionVariable",12],[6,"Ordering",779],[6,"Result",780],[10,"Deserializer",781],[10,"Deserialize",781],[10,"Serializer",782],[6,"ErrorImpl",782],[10,"PartialEq",779],[5,"Error",783],[5,"Formatter",784],[8,"Result",784],[10,"Debug",784],[10,"Hasher",785],[10,"Serializer",786],[10,"Serialize",786],[5,"String",787],[5,"TypeId",788],[5,"Vec",789],[10,"Fn",790],[5,"Box",791],[5,"Context",224],[5,"SchemaGenerator",792],[6,"Schema",793],[6,"SolverFamily",452],[5,"Rule",336],[5,"RuleSet",336],[5,"RwLock",794],[5,"Arc",795],[1,"str"],[6,"Cow",796],[6,"Error",254],[5,"Error",797],[5,"Error",798],[10,"Error",799],[5,"Metadata",276],[5,"Model",300],[8,"Result",254],[5,"Reduction",336],[8,"ApplicationResult",336],[6,"RewriteError",336],[6,"ApplicationError",336],[5,"HashSet",800],[1,"u8"],[5,"HashMap",801],[17,"Output"],[1,"fn"],[1,"slice"],[10,"SolverAdaptor",452],[5,"SolverStats",699],[5,"SolverFamilyIter",452],[5,"Solver",452],[10,"SolverState",657],[6,"SolverError",452],[5,"Error",784],[1,"usize"],[5,"Init",657],[5,"ModelLoaded",657],[5,"ExecutionSuccess",657],[8,"SolverCallback",452],[5,"SolveSuccess",452],[8,"SolverMutCallback",452],[1,"f64"],[5,"Kissat",601],[5,"Minion",601],[10,"ModelModifier",632],[6,"ModificationFailure",632],[5,"Stats",699],[5,"RewriterStats",699],[6,"SearchStatus",452],[6,"SearchComplete",452],[6,"SearchIncomplete",452],[5,"NotModifiable",632],[5,"ExecutionFailure",657]],"b":[[117,"impl-Display-for-Constant"],[118,"impl-Debug-for-Constant"],[121,"impl-Display-for-Expression"],[122,"impl-Debug-for-Expression"],[123,"impl-Debug-for-Name"],[124,"impl-Display-for-Name"],[126,"impl-Display-for-DecisionVariable"],[127,"impl-Debug-for-DecisionVariable"],[128,"impl-From%3Cbool%3E-for-Constant"],[129,"impl-From%3Ci32%3E-for-Constant"],[134,"impl-From%3Cbool%3E-for-Expression"],[135,"impl-From%3Ci32%3E-for-Expression"],[264,"impl-Debug-for-Error"],[265,"impl-Display-for-Error"],[266,"impl-From%3CError%3E-for-Error"],[268,"impl-From%3CError%3E-for-Error"],[288,"impl-Display-for-Metadata"],[289,"impl-Debug-for-Metadata"],[373,"impl-Display-for-RewriteError"],[374,"impl-Debug-for-RewriteError"],[375,"impl-Display-for-ApplicationError"],[376,"impl-Debug-for-ApplicationError"],[378,"impl-Debug-for-Rule%3C\'a%3E"],[379,"impl-Display-for-Rule%3C\'a%3E"],[380,"impl-Display-for-RuleSet%3C\'a%3E"],[381,"impl-Debug-for-RuleSet%3C\'a%3E"],[512,"impl-Debug-for-SolverFamily"],[513,"impl-Display-for-SolverFamily"],[515,"impl-Display-for-SolverError"],[516,"impl-Debug-for-SolverError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAE4CPwAAAAQABgAEAAwAAAAPAAMAFAAAABYAAAAYAAAAHgACACMAAAAlAAAAKgAAACwAAAAuAAAAMAAAADMAAAA1AE0AhwABAIwAAACXAAAArwA+APAADgAAAQIABAEHAA0BAAAPARMAJQEXAD8BAQBCAQsAUAEBAFMBAABXAQEAWgEAAFwBIgCNAQEAlAEAAJYBBAChAQAAowEbAMIBAQDGAQAAyAEMANoBAADcAQYA5QEgAA4CAAAQAgAAEgIBABwCBQAjAggALQIAAC8CAAAxAigAXAIFAGQCAgBpAhAAgAIFAIoCBwCUAgIAmQIHAKsCJADRAggA4AIVAPgCEAA="}],\
["conjure_macros",{"t":"XQ","n":["register_rule","register_rule_set"],"q":[[0,"conjure_macros"]],"i":[0,0],"f":"``","D":"d","p":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA"}],\
["conjure_oxide",{"t":"GIPPGPFPFPPPPFFPFPGNNNNNNNNNONNCNNNNNNNNNNNNNNNNONNNNNNNNNNNNOONNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHNNNNNNNNNNNNNNHOONNNNNNOOONXQCOCNNNNNNNCONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCONNNNNNNNNNNPPPPPPPGPFPGPGPPPPPPPPPPGPPPPGPGPPPPPPIPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHGIPPPFPGFPFCONNXNNNNHHHHHHHNOOOOOXQHHOOONNNNNXFNNNNNNXNNNNNNNNNHPPPPPPPPPPPPPGGGFFKIGGFIPPNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNMNCNNNNNNMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKGFPPNNNNNNNNNNNNNNNNNNFFFFKOONNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNOCCCCPGPNNNNNNHNHHNNNNNHHHHHHHHHHH","n":["ApplicationError","ApplicationResult","BoundError","Err","Error","JSON","Metadata","Minion","Model","NotImplemented","Ok","Other","Parse","Reduction","Rule","RuleNotApplicable","RuleSet","SAT","SolverFamily","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_constraint","add_constraints","add_variable","application","apply","apply","ast","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clean","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","constraints","context","default","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","eq","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","find_conjure","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_str","gensym","get_constraints_vec","get_dependencies","get_domain","get_example_model","get_example_model_by_path","get_rule_by_name","get_rule_set_by_name","get_rule_sets","get_rule_sets_for_solver_family","get_rules","get_rules","hash","hash","hash","into","into","into","into","into","into","into","into","iter","json_schema","model_from_json","name","name","new","new","new","new","new","new_empty","new_expression","new_top","order","pure","register_rule","register_rule_set","rule_engine","rule_sets","rules","schema_id","schema_name","serialize","serialize","serialize","set_constraints","set_context","solver","solver_families","source","symbols","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_domain","utils","variables","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_dependencies","with_symbols","with_top","AllDiff","And","Bool","Bool","BoolDomain","Bounded","Bubble","Constant","Constant","DecisionVariable","DivEq","Domain","Eq","Expression","Geq","Gt","Ineq","Int","Int","IntDomain","Leq","Lt","MachineName","Min","Name","Neq","Not","Nothing","Or","Range","Reference","ReturnType","SafeDiv","Single","Sum","SumEq","SumGeq","SumLeq","SymbolTable","UnsafeDiv","UserName","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","can_be_undefined","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","domain","eq","eq","eq","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","hash","into","into","into","into","into","into","into","is_all_diff","is_and","is_bubble","is_clean","is_constant","is_div_eq","is_eq","is_geq","is_gt","is_ineq","is_leq","is_lt","is_min","is_neq","is_not","is_nothing","is_or","is_reference","is_safe_div","is_sum","is_sum_eq","is_sum_geq","is_sum_leq","is_unsafe_div","max_i32","min_i32","min_max_i32","new","partial_cmp","return_type","serialize","serialize","serialize","serialize","serialize","serialize","set_clean","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uniplate","vzip","vzip","vzip","vzip","vzip","vzip","vzip","conjure_executable","ApplicationError","ApplicationResult","BoundError","Err","Ok","Reduction","ResolveRulesError","RewriteError","Rule","RuleNotApplicable","RuleSet","_dependencies","application","borrow","borrow_mut","distributed_slice","fmt","fmt","from","from","get_rule_by_name","get_rule_priorities","get_rule_set_by_name","get_rule_sets","get_rule_sets_for_solver_family","get_rules","get_rules_vec","into","name","name","new_expression","new_top","order","register_rule","register_rule_set","resolve_rule_sets","rewrite_model","rule_sets","solver_families","symbols","to_string","try_from","try_into","type_id","vzip","distributed_slice","DistributedSlice","__clone_box","borrow","borrow_mut","clone","clone_into","deref","distributed_slice","from","into","into_iter","static_slice","to_owned","try_from","try_into","type_id","vzip","eval_constant","Complete","HasSolutions","Incomplete","Minion","ModelFeatureNotImplemented","ModelFeatureNotSupported","ModelInvalid","NoSolutions","OpNotImplemented","OpNotSupported","Runtime","RuntimeNotImplemented","SAT","SearchComplete","SearchIncomplete","SearchStatus","SolveSuccess","Solver","SolverAdaptor","SolverCallback","SolverError","SolverFamily","SolverFamilyIter","SolverMutCallback","Timeout","UserTerminated","__clone_box","__clone_box","__clone_box","adaptors","add_adaptor_info_to_stats","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","fmt","fmt","fmt","from","from","from","from","from","from","from","get_family","get_family","get_name","init_solver","into","into","into","into","into","into","into","into_iter","len","load_model","load_model","model_modifier","new","next","next_back","nth","save_stats_to_context","size_hint","solve","solve","solve_mut","solve_mut","states","stats","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wall_time_s","Kissat","Minion","borrow","borrow","borrow_mut","borrow_mut","default","default","from","from","get_family","get_family","get_name","into","into","load_model","load_model","new","new","solve","solve","solve_mut","solve_mut","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ArgsInvalid","Error","ModelModifier","ModificationFailure","NotModifiable","OpNotImplemented","OpNotSupported","add_constraint","add_variable","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ExecutionFailure","ExecutionSuccess","Init","ModelLoaded","SolverState","_sealed","_sealed","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","into","into","into","into","stats","status","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","why","conjure","json","misc","testing","ConjurePrettyError","EssenceParseError","ParseError","borrow","borrow_mut","fmt","fmt","from","from","get_minion_solutions","into","minion_solutions_to_json","parse_essence_file","to_string","try_from","try_into","type_id","vzip","sort_json_object","sort_json_variables","to_set","assert_eq_any_order","minion_solutions_from_json","read_minion_solutions_json","read_model_json","save_minion_solutions_json","save_model_json","save_stats_json","serialise_model"],"q":[[0,"conjure_oxide"],[209,"conjure_oxide::ast"],[421,"conjure_oxide::find_conjure"],[422,"conjure_oxide::rule_engine"],[467,"conjure_oxide::rule_engine::_dependencies"],[468,"conjure_oxide::rule_engine::_dependencies::linkme"],[485,"conjure_oxide::rules"],[486,"conjure_oxide::solver"],[608,"conjure_oxide::solver::adaptors"],[639,"conjure_oxide::solver::model_modifier"],[664,"conjure_oxide::solver::states"],[706,"conjure_oxide::utils"],[710,"conjure_oxide::utils::conjure"],[728,"conjure_oxide::utils::json"],[730,"conjure_oxide::utils::misc"],[731,"conjure_oxide::utils::testing"],[739,"dyn_clone::sealed"],[740,"alloc::vec"],[741,"core::result"],[742,"serde::de"],[743,"erased_serde::ser"],[744,"erased_serde::ser"],[745,"core::fmt"],[746,"core::fmt"],[747,"anyhow"],[748,"std::collections::hash::set"],[749,"core::option"],[750,"std::collections::hash::map"],[751,"core::hash"],[752,"schemars::gen"],[753,"schemars::schema"],[754,"conjure_core::context"],[755,"std::sync::rwlock"],[756,"alloc::sync"],[757,"alloc::borrow"],[758,"alloc::string"],[759,"serde::ser"],[760,"core::error"],[761,"core::any"],[762,"core::clone"],[763,"core::cmp"],[764,"serde::de"],[765,"alloc::boxed"],[766,"anyhow"],[767,"conjure_core::stats::solver_stats"],[768,"conjure_core::solver::private"],[769,"core::fmt"],[770,"core::cmp"]],"i":[0,0,10,84,0,20,0,14,0,20,84,20,20,0,0,10,0,14,0,12,3,8,9,13,14,3,3,3,9,8,9,0,20,12,3,10,8,9,13,14,20,12,3,10,8,9,13,14,12,12,3,8,9,13,14,12,3,8,9,13,14,3,3,12,12,3,14,12,3,14,12,3,9,13,14,12,3,14,0,20,20,12,12,3,10,10,8,9,9,13,13,14,14,20,20,20,12,3,10,8,9,13,14,14,3,3,13,3,0,0,0,0,0,0,0,13,9,13,14,20,12,3,10,8,9,13,14,14,14,0,9,13,12,3,8,9,13,3,8,8,13,8,0,0,0,9,0,14,14,12,3,14,3,3,0,13,20,8,12,3,8,9,13,14,20,12,10,9,13,14,20,12,3,10,8,9,13,14,14,20,12,3,10,8,9,13,14,20,12,3,10,8,9,13,14,3,0,3,20,12,3,10,8,9,13,14,13,8,8,4,4,48,51,27,49,4,0,4,0,4,0,4,0,4,4,4,48,51,27,4,4,6,4,0,4,4,4,4,0,4,0,4,49,4,4,4,4,0,4,6,48,49,27,4,6,51,7,48,49,27,4,6,51,7,48,49,27,4,6,51,7,4,4,48,49,27,4,6,51,7,48,49,27,4,6,51,7,6,48,49,27,4,6,7,48,49,27,4,6,7,7,48,49,27,4,6,51,7,48,49,27,4,6,7,48,48,49,27,4,4,6,6,51,7,7,48,48,48,49,27,4,4,4,6,51,7,6,48,49,27,4,6,51,7,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,27,27,27,7,6,4,48,49,27,4,6,7,4,48,49,27,4,6,51,7,48,4,6,7,48,49,27,4,6,51,7,48,49,27,4,6,51,7,48,49,27,4,6,51,7,4,48,49,27,4,6,51,7,0,0,0,10,84,84,0,60,0,0,10,0,0,9,60,60,0,60,60,60,60,0,0,0,0,0,0,0,60,9,13,8,8,13,0,0,0,0,9,13,8,60,60,60,60,60,0,0,62,62,62,62,62,62,0,62,62,62,62,62,62,62,62,62,0,85,86,85,14,67,67,67,86,67,67,67,67,14,0,0,0,0,0,0,0,0,0,0,0,87,87,32,65,67,0,63,72,85,87,86,32,65,67,72,85,87,86,32,65,67,32,65,67,32,65,67,32,67,67,72,85,87,86,32,65,67,63,65,63,63,72,85,87,86,32,65,67,32,32,63,65,0,65,32,32,32,65,32,63,65,63,65,0,65,32,65,67,67,72,85,87,86,32,65,67,72,85,87,86,32,65,67,72,85,87,86,32,65,67,72,85,87,86,32,65,67,65,0,0,74,75,74,75,74,75,74,75,74,75,75,74,75,74,75,74,75,74,75,74,75,74,75,74,75,74,75,74,75,77,77,0,0,0,77,77,76,76,88,77,88,77,88,77,88,77,88,77,88,77,88,77,88,77,0,0,0,0,0,71,89,90,70,71,89,90,70,71,89,90,70,71,89,90,70,71,89,71,71,90,70,71,89,90,70,71,89,90,70,71,89,90,70,71,89,89,0,0,0,0,78,0,78,78,78,78,78,78,78,0,78,0,0,78,78,78,78,78,0,0,0,0,0,0,0,0,0,0,0],"f":"```````````````````{{cb}d{}}00000{{fh}d}{{f{j{h}}}d}{{fln}d}`{{A`f}d}{{Abhf}{{Af{A`Ad}}}}`{ce{}{}}000000000000000`{AhAh}{ff}{A`A`}{AbAb}{AjAj}{AlAl}{{ce}d{}{}}00000``{{}Ah}{c{{Af{Ah}}}An}{c{{Af{f}}}An}{c{{Af{Al}}}An}{{cB`}{{Af{dBb}}}{}}00{{AhAh}Bd}{{ff}Bd}{{AbAb}Bd}{{AjAj}Bd}{{AlAl}Bd}{{cB`}{{Af{dBf}}}{}}00`{{BhBj}{{Af{dBl}}}}0{{AhBj}{{Af{dBl}}}}0{{fBj}{{Af{dBl}}}}{{AdBj}{{Af{dBl}}}}0{{A`Bj}{{Af{dBl}}}}{{AbBj}{{Af{dBl}}}}0{{AjBj}{{Af{dBl}}}}0{{AlBj}{{Af{dBl}}}}0{BnBh}{cc{}}{C`Bh}1111111{Cb{{Af{Al}}}}{fl}{f{{j{h}}}}{Aj{{Cd{Aj}}}}{{fl}{{Ch{Cf}}}}{Cb{{Af{fC`}}}}0{Cb{{Ch{Ab}}}}{Cb{{Ch{Aj}}}}{{}{{j{Aj}}}}{Al{{j{Aj}}}}{{}{{j{Ab}}}}{Aj{{Cl{AbCj}}}}{{Abc}dCn}{{Ajc}dCn}{{Alc}dCn}{ce{}{}}0000000{{}D`}{DbDd}{{Cb{Dj{{Dh{Df}}}}}{{Af{fBh}}}}``{{}Ah}{{{Cl{ln}}h{Dj{{Dh{Df}}}}}f}{{hh{Cl{ln}}}A`}{{Cb{Dn{hf}{{Dl{{Af{A`Ad}}}}}}{Eb{{E`{CbCj}}}}}Ab}{{CbCj{Eb{Cb}}{Eb{Al}}}Aj}{{{Dj{{Dh{Df}}}}}f}```{hA`}`````{{}{{Ed{Cb}}}}{{}Ef}{{Ahc}AfEh}{{fc}AfEh}{{Alc}AfEh}{{f{j{h}}}d}{{f{Dj{{Dh{Df}}}}}d}``{Bh{{Ch{Ej}}}}`{ce{}{}}00000{cEf{}}00000{c{{Af{e}}}{}{}}0000000{Cb{{Af{Al}}}}11111111{cEl{}}0000000{{flCf}d}``55555555{Aj{{Cd{Aj}}}}{{h{Cl{ln}}}A`}{{hh}A`}`````````````````````````````````````````{{cb}d{}}00000099999999999999{{h{Cl{ln}}}{{Ch{{E`{EnEn}}}}}}{hBd}{F`F`}{{{Fb{c}}}{{Fb{c}}}Fd}{CfCf}{hh}{ll}{FfFf}{nn}{{ce}d{}{}}000000{{ll}Fh}{c{{Af{F`}}}An}{c{{Af{{Fb{e}}}}}AnFj}{c{{Af{Cf}}}An}{c{{Af{h}}}An}{c{{Af{l}}}An}{c{{Af{n}}}An}{{cB`}{{Af{dBb}}}{}}00000`{{F`F`}Bd}{{{Fb{c}}{Fb{c}}}BdFl}{{CfCf}Bd}{{hh}Bd}{{ll}Bd}{{FfFf}Bd}{{nn}Bd}{{cB`}{{Af{dBf}}}{}}00000{{F`Bj}{{Af{dBl}}}}0{{{Fb{c}}Bj}{{Af{dBl}}}Fn}{{CfBj}{{Af{dBl}}}}{{hBj}{{Af{dBl}}}}0{{lBj}{{Af{dBl}}}}0{{FfBj}{{Af{dBl}}}}{{nBj}{{Af{dBl}}}}0{EnF`}{cc{}}{BdF`}11{Bdh}{Enh}3333{{lc}dCn}{ce{}{}}000000{hBd}00000000000000000000000{Cf{{Ch{En}}}}0{Cf{{Ch{{E`{EnEn}}}}}}{Cfn}{{ll}{{Ch{Fh}}}}{h{{Ch{Ff}}}}{{F`c}AfEh}{{{Fb{c}}e}AfG`Eh}{{Cfc}AfEh}{{hc}AfEh}{{lc}AfEh}{{nc}AfEh}{{hBd}d}======={cEf{}}000{c{{Af{e}}}{}{}}0000000000000{cEl{}}000000{h{{E`{{j{h}}{Gd{Gb}}}}}}{ce{}{}}000000{{}{{Gf{d}}}}`````````````11`{{GhBj}{{Af{dBl}}}}0{cc{}}{GjGh}{Cb{{Ch{Ab}}}}{{{j{Aj}}}{{Af{{Cl{AbCj}}Gj}}}}{Cb{{Ch{Aj}}}}{{}{{j{Aj}}}}{Al{{j{Aj}}}}{{}{{j{Ab}}}}{{{Cl{AbCj}}}{{j{Ab}}}};```````{{Al{j{Ef}}}{{Af{{j{Aj}}Gj}}}}{{f{j{Aj}}}{{Af{fGh}}}}```{cEf{}}{c{{Af{e}}}{}{}}0{cEl{}}{ce{}{}}``{{cb}d{}}11{{{Gl{{Eb{c}}}}}{{Gl{{Eb{c}}}}}{}}{{ce}d{}{}}{{{Gl{{Eb{c}}}}}{}{}}`{cc{}}51{{{Gl{{Eb{c}}}}}{{Eb{c}}}{}}68876{h{{Ch{F`}}}}``````````````````````````666`{{GnH`}H`}88888888888888{D`D`}{{{Hb{ce}}}{{Hb{ce}}}{FdGn}{FdHd}}{HfHf}888{{D`Bj}{{Af{dBl}}}}{{HfBj}{{Af{dBl}}}}08888888{GnAl}{{{Hb{c}}}AlGn}{Gn{{Ch{Ef}}}}{{GnHh}d}{ce{}{}}0000000{D`Hj}{{GnfHh}{{Af{dHf}}}}{{{Hb{c}}f}{{Af{{Hb{cHl}}Hf}}}Gn}`{c{{Hb{c}}}Gn}{D`Ch}0{{D`Hj}Ch}{{{Hb{cHn}}}dGn}{D`{{E`{Hj{Ch{Hj}}}}}}{{Gn{Gd{Gb}}Hh}{{Af{I`Hf}}}}{{{Hb{cHl}}{Gd{Gb}}}{{Af{{Hb{cHn}}Hf}}}Gn}10`{{{Hb{cHn}}}H`Gn};;;{cEf{}}{c{{Af{e}}}{}{}}0000000000000{cEl{}}000000>>>>>>>{{{Hb{cHn}}}IbGn}``????{{}Id}{{}If}{cc{}}0{IdAl}{IfAl}{If{{Ch{Ef}}}}{ce{}{}}0{{IdfHh}{{Af{dHf}}}}{{IffHh}{{Af{dHf}}}}87{{Id{Gd{Gb}}Hh}{{Af{I`Hf}}}}{{If{Gd{Gb}}Hh}{{Af{I`Hf}}}}10====<<44```````{{Ihh}{{Af{dIj}}}}{{IhlCf}{{Af{dIj}}}}6666::66????>>66```````66666666::::6666``????????>>>>6666````````66{{IlBj}In}0{BhIl}<{f{{Af{{j{{Cl{lF`}}}}C`}}}}9{{{j{{Cl{lF`}}}}}J`}{{CbCb{Dj{{Dh{Df}}}}}{{Af{fIl}}}}{cEf{}}{c{{Af{e}}}{}{}}0{cEl{}}>{{J`Bd}J`}{J`J`}{{{j{c}}}{{Cd{c}}}{JbJdFnFd}}{{{j{{j{c}}}}{j{{j{c}}}}}d{JbJdFnFd}}{Cb{{Af{{j{{Cl{lF`}}}}C`}}}}{{CbCbCb}{{Af{J`C`}}}}{{CbCbCbCb}{{Af{fJf}}}}{{{j{{Cl{lF`}}}}CbCbBd}{{Af{J`Jf}}}}{{fCbCbCbBd}{{Af{dJf}}}}{{{Dj{{Dh{Df}}}}CbCb}{{Af{dJf}}}}{f{{Af{EfBn}}}}","D":"AHj","p":[[5,"Private",739],[1,"unit"],[5,"Model",0],[6,"Expression",209],[5,"Vec",740],[6,"Name",209],[5,"DecisionVariable",209],[5,"Reduction",0],[5,"Rule",0],[6,"ApplicationError",0],[6,"Result",741],[5,"Metadata",0],[5,"RuleSet",0],[6,"SolverFamily",0],[10,"Deserializer",742],[10,"Serializer",743],[6,"ErrorImpl",743],[1,"bool"],[5,"Error",744],[6,"Error",0],[5,"Formatter",745],[5,"Error",745],[5,"Error",746],[5,"Error",747],[1,"str"],[5,"HashSet",748],[6,"Domain",209],[6,"Option",749],[1,"u8"],[5,"HashMap",750],[10,"Hasher",751],[5,"SolverFamilyIter",486],[5,"SchemaGenerator",752],[6,"Schema",753],[5,"Context",754],[5,"RwLock",755],[5,"Arc",756],[17,"Output"],[1,"fn"],[1,"tuple"],[1,"slice"],[6,"Cow",757],[5,"String",758],[10,"Serializer",759],[10,"Error",760],[5,"TypeId",761],[1,"i32"],[6,"Constant",209],[6,"Range",209],[10,"Clone",762],[6,"ReturnType",209],[6,"Ordering",763],[10,"Deserialize",742],[10,"PartialEq",763],[10,"Debug",745],[10,"Serialize",759],[10,"Fn",764],[5,"Box",765],[8,"Result",747],[6,"RewriteError",422],[6,"ResolveRulesError",766],[5,"DistributedSlice",468],[10,"SolverAdaptor",486],[5,"SolverStats",767],[5,"Solver",486],[10,"SolverState",664],[6,"SolverError",486],[5,"Internal",768],[1,"usize"],[5,"ModelLoaded",664],[5,"ExecutionSuccess",664],[5,"SolveSuccess",486],[1,"f64"],[5,"Kissat",608],[5,"Minion",608],[10,"ModelModifier",639],[6,"ModificationFailure",639],[6,"EssenceParseError",710],[8,"Result",745],[6,"Value",769],[10,"Eq",763],[10,"Hash",751],[5,"Error",770],[8,"ApplicationResult",0],[6,"SearchStatus",486],[6,"SearchComplete",486],[6,"SearchIncomplete",486],[5,"NotModifiable",639],[5,"ExecutionFailure",664],[5,"Init",664]],"b":[[79,"impl-Display-for-Error"],[80,"impl-Debug-for-Error"],[81,"impl-Debug-for-Metadata"],[82,"impl-Display-for-Metadata"],[84,"impl-Display-for-ApplicationError"],[85,"impl-Debug-for-ApplicationError"],[87,"impl-Display-for-Rule%3C\'a%3E"],[88,"impl-Debug-for-Rule%3C\'a%3E"],[89,"impl-Debug-for-RuleSet%3C\'a%3E"],[90,"impl-Display-for-RuleSet%3C\'a%3E"],[91,"impl-Debug-for-SolverFamily"],[92,"impl-Display-for-SolverFamily"],[93,"impl-From%3CError%3E-for-Error"],[95,"impl-From%3CError%3E-for-Error"],[314,"impl-Display-for-Constant"],[315,"impl-Debug-for-Constant"],[318,"impl-Debug-for-Expression"],[319,"impl-Display-for-Expression"],[320,"impl-Debug-for-Name"],[321,"impl-Display-for-Name"],[323,"impl-Display-for-DecisionVariable"],[324,"impl-Debug-for-DecisionVariable"],[325,"impl-From%3Ci32%3E-for-Constant"],[327,"impl-From%3Cbool%3E-for-Constant"],[330,"impl-From%3Cbool%3E-for-Expression"],[331,"impl-From%3Ci32%3E-for-Expression"],[438,"impl-Display-for-RewriteError"],[439,"impl-Debug-for-RewriteError"],[538,"impl-Display-for-SolverError"],[539,"impl-Debug-for-SolverError"],[715,"impl-Display-for-EssenceParseError"],[716,"impl-Debug-for-EssenceParseError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAB4CRQAAAAEAAwAAAAUABQAMAAEAEAAAABIATABgAAAAaAAAAGoAAABsAAAAdQACAIAAAwCFAAcAkQAJAJ0AMQDUAAMA2QAAANsAAADdAAAA4wACAOgAAADqAAAA7wAAAPEAAADzAAAA9QAAAPgAAAD6AEwASAEAAEsBAQBRAQAAXAEAAHQBMQCnAQAAqQEAAK0BAQCwAQAAsgEGALoBAADDAQAAxQEBAMwBAADOAQYA1gEGAN8BAADhAQQA6AEAAOoBDAD8AQAA/gEFAAYCFgAlAgAAJwIAAC8CAwA0AgUAOwIAAD0CAAA/AiEAYwIFAGsCAgBwAhAAhwIFAJECBwCbAgIAoAIHALICHADQAgAA0gIGANsCCAA="}],\
["enum_compatability_macro",{"t":"X","n":["document_compatibility"],"q":[[0,"enum_compatability_macro"]],"i":[0],"f":"`","D":"d","p":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["minion_rs",{"t":"ICCHHPPPPPPPPGPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPPPFPIIGGIPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNPGPPGPPNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Callback","ast","error","get_from_table","run_minion","Abs","AllDiff","AllDiffMatrix","Bool","Bool","Bound","CheckAssign","CheckGsa","Constant","ConstantAsVar","Constraint","Difference","DisEq","Discrete","Div","DivUndefZero","Element","ElementOne","ElementUndefZero","Eq","ForwardChecking","FrameUpdate","GacAllDiff","GacEq","GacSchema","Gcc","GccWeak","Hamming","Ineq","Integer","LexLeq","LexLeqQuick","LexLeqRv","LexLess","LexLessQuick","LightTable","LitSumGeq","Max","Mddc","Min","MinusEq","Model","Modulo","ModuloUndefZero","NameRef","NegativeMddc","NegativeTable","NotHamming","NvalueGeq","NvalueLeq","Occurrence","OccurrenceGeq","OccurrenceLeq","Pow","Product","Reify","ReifyImply","ReifyImplyQuick","SparseBound","Str2Plus","SumGeq","SumLeq","SymbolTable","Table","Tuple","TwoVars","Var","VarDomain","VarName","WInIntervalSet","WInRange","WInset","WLiteral","WNotInRange","WNotInset","WNotLiteral","WatchElement","WatchElementOne","WatchElementOneUndefZero","WatchElementUndefZero","WatchLess","WatchNeq","WatchSumGeq","WatchSumLeq","WatchVecExistsLess","WatchVecNeq","WatchedAnd","WatchedOr","WeightedSumGeq","WeightedSumLeq","add_var","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","constraints","contains","default","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_variable_order","get_vartype","into","into","into","into","into","into","named_variables","new","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","InvalidInstance","MinionError","NotImplemented","Other","RuntimeError","RuntimeError","UnknownError","borrow","borrow","borrow_mut","borrow_mut","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"minion_rs"],[5,"minion_rs::ast"],[175,"minion_rs::error"],[207,"alloc::string"],[208,"core::option"],[209,"core::result"],[210,"core::fmt"],[211,"core::fmt"],[212,"core::any"],[213,"anyhow"],[214,"core::error"]],"i":[0,0,0,0,0,11,11,11,13,10,10,11,11,0,12,0,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,11,11,11,11,11,11,11,11,11,11,11,0,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,0,11,0,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,12,13,10,8,3,11,12,13,10,8,3,11,12,13,10,8,3,11,12,13,10,8,3,8,3,3,11,12,13,10,8,3,11,12,13,10,8,3,11,12,13,10,8,8,8,3,11,12,13,10,8,3,3,3,11,12,13,10,8,3,11,12,13,10,8,3,11,12,13,10,8,3,11,12,13,10,8,19,0,6,6,0,6,19,6,19,6,19,19,6,6,19,19,6,6,6,19,19,6,19,6,6,19,6,19,6,19,6,19],"f":"```{b{{d{b}}}}{{fh}{{n{jl}}}}``````````````````````````````````````````````````````````````````````````````````````````{{A`AbAd}{{d{j}}}}{ce{}{}}00000000000{ff}{AfAf}{AhAh}{AjAj}{AdAd}{A`A`}{{ce}j{}{}}00000`{{A`Ab}Al}{{}f}{{ff}Al}{{AfAf}Al}{{AhAh}Al}{{AjAj}Al}{{AdAd}Al}{{A`A`}Al}{{fAn}B`}{{AfAn}B`}{{AhAn}B`}{{AjAn}B`}{{AdAn}B`}{{A`An}B`}{cc{}}00000{A`{{Bb{Ab}}}}{{A`Ab}{{d{Ad}}}}{ce{}{}}00000`{{}f}111111{c{{n{e}}}{}{}}00000000000{cBd{}}00000```````3333{{BfBf}Al}{{lAn}B`}0{{BfAn}B`}0{Bfl}:{Bhl}{BjBf}<99{l{{d{Bl}}}}{cb{}}0999988","D":"Dn","p":[[5,"String",207],[6,"Option",208],[5,"Model",5],[8,"Callback",0],[1,"unit"],[6,"MinionError",175],[6,"Result",209],[5,"SymbolTable",5],[8,"VarName",5],[6,"VarDomain",5],[6,"Constraint",5],[6,"Var",5],[6,"Constant",5],[1,"bool"],[5,"Formatter",210],[8,"Result",210],[5,"Vec",211],[5,"TypeId",212],[6,"RuntimeError",175],[5,"Error",213],[1,"u32"],[10,"Error",214]],"b":[[187,"impl-Debug-for-MinionError"],[188,"impl-Display-for-MinionError"],[189,"impl-Display-for-RuntimeError"],[190,"impl-Debug-for-RuntimeError"],[191,"impl-From%3CRuntimeError%3E-for-MinionError"],[193,"impl-From%3CError%3E-for-MinionError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKgADAAGAAcADwAAABEAHQAwABMARQACAEoAFQBhACYAlgAAAJgAFwC3AAkAwgABAMcACAA="}],\
["uniplate",{"t":"PPGPCNNNNNNNNNNNNNNNCNKEKMNNNNNNNNMNNNKGPNNNNNNNNNNNNNNNNNMNNN","n":["Many","One","Tree","Zero","biplate","borrow","borrow_mut","clone","clone_into","eq","fmt","from","into","into_iter","list","map","to_owned","try_from","try_into","type_id","uniplate","vzip","Biplate","Tree","Uniplate","biplate","cata","children","children_bi","descend","descend_bi","rewrite","transform","transform_bi","uniplate","universe","universe_bi","with_children","Uniplate","UniplateError","WrongNumberOfChildren","borrow","borrow_mut","children","descend","eq","fmt","fmt","fold","from","into","one_holed_context","rewrite","to_string","transform","try_from","try_into","type_id","uniplate","universe","vzip","with_children"],"q":[[0,"uniplate"],[22,"uniplate::biplate"],[38,"uniplate::uniplate"],[62,"core::clone"],[63,"core::marker"],[64,"core::cmp"],[65,"core::cmp"],[66,"core::fmt"],[67,"core::ops::function"],[68,"alloc::boxed"],[69,"alloc::sync"],[70,"core::result"],[71,"core::any"],[72,"alloc::vec"],[73,"core::option"],[74,"alloc::string"]],"i":[1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,18,19,19,18,19,18,19,19,18,19,19,18,19,0,0,24,24,24,20,20,24,24,24,20,24,24,20,20,24,20,24,24,24,20,20,24,20],"f":"`````{ce{}{}}0{{{b{c}}}{{b{c}}}{dfdh}}{{ce}j{}{}}{{{b{c}}{b{c}}}l{nfdh}}{{{b{c}}A`}Ab{Adfdh}}{cc{}}5{{{b{c}}}e{fdh}{}}{{{b{c}}}{{Al{{Af{c}}{Aj{Ah}}}}}{fdh}}{{{b{c}}{An{Ah}}}{{b{c}}}{fdh}}8{c{{B`{e}}}{}{}}0{cBb{}}`:```{Bd{{Al{{b{c}}{Aj{Ah}}}}}{fdhBf}}{{Bf{An{Ah}}}c{}}{Bf{{Af{Bf}}}}{Bd{{Af{c}}}{fdhBf}}{{Bf{An{Ah}}}Bf}{{Bd{An{Ah}}}Bd}110{Bf{{Al{{b{Bf}}{Aj{Ah}}}}}}43{{Bf{Af{Bf}}}Bf}```{ce{}{}}0{Bh{{Bj{Bh}}}}{{Bh{Bn{Bh}{{Bl{Bh}}}}}{{B`{BhC`}}}}{{C`C`}l}{{C`A`}Ab}0{{Bh{Bn{Bh{Bj{c}}}{{Bl{c}}}}}c{}}{cc{}}6{{BhCb}{{Cd{{Aj{Ah}}}}}}{{Bh{Bn{Bh}{{Bl{{Cd{Bh}}}}}}}{{B`{BhC`}}}}{cCf{}}7{c{{B`{e}}}{}{}}0{cBb{}}{Bh{{Al{{Bj{Bh}}{Aj{Ah}}}}}};<{{Bh{Bj{Bh}}}{{B`{BhC`}}}}","D":"C`","p":[[6,"Tree",0],[10,"Clone",62],[10,"Sized",63],[10,"Eq",64],[1,"unit"],[1,"bool"],[10,"PartialEq",64],[5,"Formatter",65],[8,"Result",65],[10,"Debug",65],[5,"Vector",66],[10,"Fn",67],[5,"Box",68],[1,"tuple"],[5,"Arc",69],[6,"Result",70],[5,"TypeId",71],[10,"Biplate",22],[10,"Uniplate",22],[10,"Uniplate",38],[5,"Vec",72],[17,"Output"],[1,"fn"],[6,"UniplateError",38],[1,"usize"],[6,"Option",73],[5,"String",74]],"b":[[46,"impl-Display-for-UniplateError"],[47,"impl-Debug-for-UniplateError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACYACwABAAoADgAAABAACQAeAAAAIgABACUAAAAnAAQALgACADYAAAA4AAIAPQAAAA=="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
